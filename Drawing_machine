float angle = 0.0;
float [] size = new float[3];
color[] colors = new color[8];
int color_index = 0;
int size_index = 0;

void setup() {
  size(800, 500);
  background(0);
  smooth();
  noStroke(); 


//setting the different sizes the line can become
  size[0] = 0.1;
  size[1] = 90;
  size[2] = 900;
}

void draw() {
  //creating LFO's to manipulte the colour gradient
  int r1 = (int)map(sin(frameCount*0.005), -1, 1, 0, 255);
  int r2 = (int)map(cos(frameCount*0.005), -1, 1, 0, 255);
  int r3 = (int)map(cos(frameCount*0.010), -1, 1, 0, 255);
  int r4 = (int)map(sin(frameCount*0.025), -1, 1, 0, 255);
  int r5 = (int)map(cos(frameCount*0.025), -1, 1, 0, 255);
  
//setting the colours
  colors[0] = color(255, 0, 0, 40);
  colors[1] = color(0, 255, 0, 40);
  colors[2] = color(0, 0, 255, 40);
  colors[3] = color(255, 255, 0, 40);
  colors[4] = color(255, 255, 255, 40);
  colors[5] = color(r1, r2, r3, 100);
  colors[6] = color(0, r5, r1, 100);
  colors[7] = color(r5, r1, 30, 80);


  fill(0, 10);
  stroke (colors[color_index]);
  angle = angle - 0.01;
  translate(mouseX, mouseY); //moving the line based on the mouse position
  rotate(angle); //rotating the line based on angle
  triangle(-50, -50, -50, -50, size[size_index], 30); //creating the line
}

void mouseDragged()
//mirroring the design to the left when mouse dragged
{   
  flipHalf();
}

void flipHalf() {
  loadPixels();
  for (int x=width/2; x<width; x++) {
    for (int y=0; y<height; y++) {
      pixels[x+y*width] = pixels[(width-x)+y*width];
    }
  }
  updatePixels();
}

void keyPressed() {
  //assigning keys to the colour vairables
  if (key == 'q') color_index = 0;
  if (key == 'w') color_index = 1;
  if (key == 'e') color_index = 2;
  if (key == 'r') color_index = 3;
  if (key == 't') color_index = 4;
  if (key == 'y') color_index = 5;
  if (key == 'u') color_index = 6;
  if (key == 'i') color_index = 7;
  //assigning keys to the line vairables
  if (key == '1') size_index = 0;
  if (key == '2') size_index = 1;
  if (key == '3') size_index = 2;
  //assigning key to screenshot
  if (key == 'x') { 
    saveFrame("/Users/hamishlefevre/Documents/Processing/drawing_machine/screen_shot/drawing_machine-###.png");
  }
  //assigning key to reset the screen
  if (key == 'z') { 
    fill(random(255), random(255), random(255));
    background(0);
  }
}
